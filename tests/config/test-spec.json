{
  "name": "Janus Cross-Platform Test Suite",
  "version": "1.0.0",
  "description": "Comprehensive test specification for SOCK_DGRAM Janus implementations",
  "protocol": {
    "type": "SOCK_DGRAM",
    "transport": "unix_domain_sockets",
    "message_format": "json",
    "reply_mechanism": "temporary_socket"
  },
  "test_categories": {
    "unit_tests": {
      "description": "Individual implementation functionality tests",
      "timeout": 30,
      "parallel": true
    },
    "integration_tests": {
      "description": "Cross-language communication tests",
      "timeout": 60,
      "parallel": false
    },
    "performance_tests": {
      "description": "Performance and benchmarking tests",
      "timeout": 120,
      "parallel": false
    },
    "conformance_tests": {
      "description": "API specification compliance tests",
      "timeout": 45,
      "parallel": true
    }
  },
  "implementations": {
    "go": {
      "name": "GoJanus",
      "language": "go",
      "directory": "GoJanus",
      "build_command": ["go", "build", "-o", "janus", "./cmd/janus"],
      "test_command": ["go", "test", "./..."],
      "unified_binary": "./janus",
      "socket_path": "/tmp/go-janus-api.sock",
      "build_artifacts": ["janus"],
      "test_timeout": 30
    },
    "rust": {
      "name": "RustJanus", 
      "language": "rust",
      "directory": "RustJanus",
      "build_command": ["cargo", "build"],
      "test_command": ["cargo", "test"],
      "unified_binary": "cargo run --bin janus --",
      "socket_path": "/tmp/rust-janus-api.sock",
      "build_artifacts": ["target/debug/janus"],
      "test_timeout": 30
    },
    "swift": {
      "name": "SwiftJanus",
      "language": "swift", 
      "directory": "SwiftJanus",
      "build_command": ["swift", "build"],
      "test_command": ["swift", "test"],
      "unified_binary": "swift run SwiftJanusDgram",
      "socket_path": "/tmp/swift-janus-api.sock",
      "build_artifacts": [".build/debug/SwiftJanusDgram"],
      "test_timeout": 30
    },
    "typescript": {
      "name": "TypeScriptJanus",
      "language": "typescript",
      "directory": "TypeScriptJanus", 
      "build_command": ["npm", "run", "build"],
      "test_command": ["npm", "test"],
      "unified_binary": "node dist/bin/janus.js",
      "socket_path": "/tmp/typescript-janus-api.sock", 
      "build_artifacts": ["dist/"],
      "test_timeout": 30
    }
  },
  "test_matrix": {
    "cross_communication": {
      "description": "Test all implementations can communicate with each other",
      "combinations": [
        {"server": "go", "client": "rust"},
        {"server": "go", "client": "swift"},
        {"server": "go", "client": "typescript"},
        {"server": "rust", "client": "go"},
        {"server": "rust", "client": "swift"},
        {"server": "rust", "client": "typescript"},
        {"server": "swift", "client": "go"},
        {"server": "swift", "client": "rust"},
        {"server": "swift", "client": "typescript"},
        {"server": "typescript", "client": "go"},
        {"server": "typescript", "client": "rust"},
        {"server": "typescript", "client": "swift"}
      ]
    },
    "self_communication": {
      "description": "Test each implementation communicates with itself",
      "combinations": [
        {"server": "go", "client": "go"},
        {"server": "rust", "client": "rust"},
        {"server": "swift", "client": "swift"},
        {"server": "typescript", "client": "typescript"}
      ]
    }
  },
  "test_commands": {
    "ping": {
      "description": "Simple connectivity test",
      "channel": "system",
      "command": "ping",
      "parameters": {
        "message": "hello"
      },
      "expected_response": {
        "status": "success",
        "echo": "hello"
      },
      "timeout": 5
    },
    "echo": {
      "description": "Echo message test",
      "channel": "system",
      "command": "echo",
      "parameters": {
        "data": "test message"
      },
      "expected_response": {
        "status": "success",
        "data": "test message"
      },
      "timeout": 5
    },
    "get_info": {
      "description": "Get server information",
      "channel": "system",
      "command": "get_info",
      "parameters": {},
      "expected_response": {
        "status": "success",
        "name": "string",
        "version": "string",
        "implementation": "string"
      },
      "timeout": 5
    },
    "stress_test": {
      "description": "Send multiple rapid requests",
      "channel": "test",
      "command": "burst",
      "parameters": {
        "count": 100,
        "delay_ms": 10
      },
      "expected_response": {
        "status": "success",
        "processed": 100
      },
      "timeout": 30
    }
  },
  "performance_benchmarks": {
    "latency_test": {
      "description": "Measure request-response latency",
      "iterations": 1000,
      "concurrent_clients": 1,
      "target_p99_ms": 10
    },
    "throughput_test": {
      "description": "Measure message throughput",
      "duration_seconds": 30,
      "concurrent_clients": 10,
      "target_rps": 1000
    },
    "concurrent_test": {
      "description": "Test concurrent client handling",
      "concurrent_clients": 50,
      "requests_per_client": 100,
      "target_success_rate": 0.99
    }
  },
  "conformance_tests": [
    {
      "name": "sock_dgram_only",
      "description": "Verify only SOCK_DGRAM sockets are used",
      "validation": "network_trace"
    },
    {
      "name": "no_persistent_connections",
      "description": "Verify no persistent connections are maintained",
      "validation": "connection_monitoring"
    },
    {
      "name": "reply_to_mechanism",
      "description": "Verify proper reply_to socket usage",
      "validation": "protocol_analysis"
    },
    {
      "name": "json_message_format",
      "description": "Verify all messages use valid JSON",
      "validation": "message_parsing"
    },
    {
      "name": "timeout_handling",
      "description": "Verify proper timeout handling",
      "validation": "timeout_simulation"
    }
  ],
  "environment": {
    "required_platforms": ["linux", "macos"],
    "optional_platforms": ["windows"],
    "temp_directory": "/tmp/janus-api-tests",
    "log_directory": "test_logs",
    "max_parallel_tests": 4,
    "cleanup_on_exit": true
  }
}