{
  "version": "1.0.0",
  "name": "User Management API",
  "description": "Comprehensive user management operations with authentication and profile management",
  "channels": {
    "user-service": {
      "name": "User Service",
      "description": "Core user management operations including registration, authentication, and profile management",
      "commands": {
        "create-user": {
          "name": "Create User",
          "description": "Create a new user account with validation and security checks",
          "timeout": 30,
          "args": {
            "username": {
              "name": "Username",
              "type": "string",
              "description": "Unique username for the account",
              "required": true,
              "pattern": "^[a-zA-Z0-9_]{3,50}$",
              "minLength": 3,
              "maxLength": 50
            },
            "email": {
              "name": "Email Address",
              "type": "string",
              "description": "User's email address for notifications and recovery",
              "required": true,
              "pattern": "^[\\w\\.-]+@[\\w\\.-]+\\.[a-zA-Z]{2,}$"
            },
            "password": {
              "name": "Password",
              "type": "string",
              "description": "Secure password meeting complexity requirements",
              "required": true,
              "minLength": 8,
              "maxLength": 128
            },
            "role": {
              "name": "User Role",
              "type": "string",
              "description": "User's system role determining permissions",
              "required": false,
              "default": "user",
              "enum": [
                "admin",
                "moderator",
                "user",
                "guest"
              ]
            },
            "profile": {
              "name": "User Profile",
              "type": "object",
              "description": "Extended user profile information",
              "required": false,
              "modelRef": "UserProfile"
            }
          },
          "response": {
            "type": "object",
            "description": "User creation result with generated ID and status",
            "modelRef": "CreateUserResponse"
          },
          "errorCodes": [
            "VALIDATION_FAILED",
            "USERNAME_EXISTS",
            "EMAIL_EXISTS",
            "PASSWORD_TOO_WEAK",
            "SECURITY_VIOLATION"
          ]
        },
        "authenticate-user": {
          "name": "Authenticate User",
          "description": "Authenticate user credentials and generate session token",
          "timeout": 10,
          "args": {
            "username": {
              "name": "Username",
              "type": "string",
              "description": "Username or email for authentication",
              "required": true,
              "minLength": 1,
              "maxLength": 256
            },
            "password": {
              "name": "Password",
              "type": "string",
              "description": "User's password",
              "required": true,
              "minLength": 1,
              "maxLength": 128
            },
            "rememberMe": {
              "name": "Remember Me",
              "type": "boolean",
              "description": "Whether to create long-lived session",
              "required": false,
              "default": false
            }
          },
          "response": {
            "type": "object",
            "description": "Authentication result with session information",
            "properties": {
              "sessionToken": {
                "name": "Session Token",
                "type": "string",
                "description": "JWT token for authenticated requests"
              },
              "expiresAt": {
                "name": "Expiration Time",
                "type": "string",
                "description": "ISO 8601 timestamp when session expires"
              },
              "user": {
                "name": "User Information",
                "type": "object",
                "description": "Basic user information",
                "modelRef": "UserInfo"
              }
            }
          },
          "errorCodes": [
            "INVALID_CREDENTIALS",
            "ACCOUNT_LOCKED",
            "ACCOUNT_DISABLED",
            "TOO_MANY_ATTEMPTS"
          ]
        },
        "get-user": {
          "name": "Get User",
          "description": "Retrieve user information by ID or username",
          "timeout": 15,
          "args": {
            "userId": {
              "name": "User ID",
              "type": "string",
              "description": "Unique user identifier",
              "required": false,
              "pattern": "^[a-zA-Z0-9-]+$"
            },
            "username": {
              "name": "Username",
              "type": "string",
              "description": "Username to look up",
              "required": false,
              "pattern": "^[a-zA-Z0-9_]{3,50}$"
            },
            "includeProfile": {
              "name": "Include Profile",
              "type": "boolean",
              "description": "Whether to include extended profile information",
              "required": false,
              "default": false
            }
          },
          "response": {
            "type": "object",
            "description": "User information",
            "modelRef": "UserInfo"
          },
          "errorCodes": [
            "USER_NOT_FOUND",
            "ACCESS_DENIED",
            "VALIDATION_FAILED"
          ]
        },
        "update-user": {
          "name": "Update User",
          "description": "Update user information and profile",
          "timeout": 30,
          "args": {
            "userId": {
              "name": "User ID",
              "type": "string",
              "description": "ID of user to update",
              "required": true,
              "pattern": "^[a-zA-Z0-9-]+$"
            },
            "updates": {
              "name": "Updates",
              "type": "object",
              "description": "Fields to update",
              "required": true,
              "modelRef": "UserUpdateRequest"
            }
          },
          "response": {
            "type": "object",
            "description": "Updated user information",
            "modelRef": "UserInfo"
          },
          "errorCodes": [
            "USER_NOT_FOUND",
            "ACCESS_DENIED",
            "VALIDATION_FAILED",
            "EMAIL_EXISTS",
            "USERNAME_EXISTS"
          ]
        },
        "delete-user": {
          "name": "Delete User",
          "description": "Permanently delete a user account",
          "timeout": 60,
          "args": {
            "userId": {
              "name": "User ID",
              "type": "string",
              "description": "ID of user to delete",
              "required": true,
              "pattern": "^[a-zA-Z0-9-]+$"
            },
            "confirmation": {
              "name": "Confirmation",
              "type": "string",
              "description": "Must be 'DELETE' to confirm deletion",
              "required": true,
              "enum": [
                "DELETE"
              ]
            }
          },
          "response": {
            "type": "object",
            "description": "Deletion confirmation",
            "properties": {
              "deleted": {
                "name": "Deleted",
                "type": "boolean",
                "description": "Whether deletion was successful"
              },
              "deletedAt": {
                "name": "Deletion Time",
                "type": "string",
                "description": "ISO 8601 timestamp of deletion"
              }
            }
          },
          "errorCodes": [
            "USER_NOT_FOUND",
            "ACCESS_DENIED",
            "VALIDATION_FAILED",
            "CANNOT_DELETE_ADMIN"
          ]
        }
      }
    },
    "session-service": {
      "name": "Session Service",
      "description": "Session management and token validation operations",
      "commands": {
        "validate-session": {
          "name": "Validate Session",
          "description": "Validate session token and return user information",
          "timeout": 5,
          "args": {
            "sessionToken": {
              "name": "Session Token",
              "type": "string",
              "description": "JWT session token to validate",
              "required": true,
              "minLength": 1
            }
          },
          "response": {
            "type": "object",
            "description": "Session validation result",
            "properties": {
              "valid": {
                "name": "Valid",
                "type": "boolean",
                "description": "Whether session is valid"
              },
              "user": {
                "name": "User Information",
                "type": "object",
                "description": "User associated with session",
                "modelRef": "UserInfo"
              },
              "expiresAt": {
                "name": "Expiration Time",
                "type": "string",
                "description": "When session expires"
              }
            }
          },
          "errorCodes": [
            "INVALID_TOKEN",
            "TOKEN_EXPIRED",
            "SESSION_NOT_FOUND"
          ]
        },
        "logout": {
          "name": "Logout",
          "description": "Invalidate session token and logout user",
          "timeout": 10,
          "args": {
            "sessionToken": {
              "name": "Session Token",
              "type": "string",
              "description": "Session token to invalidate",
              "required": true,
              "minLength": 1
            }
          },
          "response": {
            "type": "object",
            "description": "Logout confirmation",
            "properties": {
              "loggedOut": {
                "name": "Logged Out",
                "type": "boolean",
                "description": "Whether logout was successful"
              },
              "loggedOutAt": {
                "name": "Logout Time",
                "type": "string",
                "description": "ISO 8601 timestamp of logout"
              }
            }
          },
          "errorCodes": [
            "INVALID_TOKEN",
            "SESSION_NOT_FOUND"
          ]
        }
      }
    }
  },
  "models": {
    "UserProfile": {
      "name": "User Profile",
      "type": "object",
      "description": "Extended user profile information",
      "properties": {
        "firstName": {
          "name": "First Name",
          "type": "string",
          "description": "User's first name",
          "required": false,
          "maxLength": 100
        },
        "lastName": {
          "name": "Last Name",
          "type": "string",
          "description": "User's last name",
          "required": false,
          "maxLength": 100
        },
        "age": {
          "name": "Age",
          "type": "integer",
          "description": "User's age in years",
          "required": false,
          "minimum": 13,
          "maximum": 120
        },
        "bio": {
          "name": "Biography",
          "type": "string",
          "description": "User's biography or description",
          "required": false,
          "maxLength": 1000
        },
        "location": {
          "name": "Location",
          "type": "string",
          "description": "User's location or city",
          "required": false,
          "maxLength": 200
        },
        "website": {
          "name": "Website",
          "type": "string",
          "description": "User's personal website URL",
          "required": false,
          "pattern": "^https?://.+",
          "maxLength": 500
        },
        "preferences": {
          "name": "Preferences",
          "type": "object",
          "description": "User preferences and settings",
          "required": false,
          "modelRef": "UserPreferences"
        }
      },
      "required": []
    },
    "UserPreferences": {
      "name": "User Preferences",
      "type": "object",
      "description": "User preferences and settings",
      "properties": {
        "theme": {
          "name": "Theme",
          "type": "string",
          "description": "UI theme preference",
          "required": false,
          "default": "light",
          "enum": [
            "light",
            "dark",
            "auto"
          ]
        },
        "language": {
          "name": "Language",
          "type": "string",
          "description": "Preferred interface language",
          "required": false,
          "default": "en",
          "pattern": "^[a-z]{2}$"
        },
        "timezone": {
          "name": "Timezone",
          "type": "string",
          "description": "User's timezone identifier",
          "required": false,
          "pattern": "^[A-Za-z_/]+$"
        },
        "notifications": {
          "name": "Notifications",
          "type": "object",
          "description": "Notification preferences",
          "required": false,
          "properties": {
            "email": {
              "name": "Email Notifications",
              "type": "boolean",
              "description": "Whether to send email notifications",
              "required": false,
              "default": true
            },
            "push": {
              "name": "Push Notifications",
              "type": "boolean",
              "description": "Whether to send push notifications",
              "required": false,
              "default": false
            }
          }
        }
      },
      "required": []
    },
    "CreateUserResponse": {
      "name": "Create User Response",
      "type": "object",
      "description": "Response from user creation operation",
      "properties": {
        "userId": {
          "name": "User ID",
          "type": "string",
          "description": "Unique identifier for the created user"
        },
        "status": {
          "name": "Status",
          "type": "string",
          "description": "Creation status",
          "enum": [
            "created",
            "pending",
            "failed"
          ]
        },
        "message": {
          "name": "Message",
          "type": "string",
          "description": "Human-readable status message"
        },
        "createdAt": {
          "name": "Created At",
          "type": "string",
          "description": "ISO 8601 timestamp of creation"
        },
        "user": {
          "name": "User Information",
          "type": "object",
          "description": "Basic information about created user",
          "modelRef": "UserInfo"
        }
      },
      "required": [
        "userId",
        "status",
        "message",
        "createdAt"
      ]
    },
    "UserInfo": {
      "name": "User Information",
      "type": "object",
      "description": "Basic user information for API responses",
      "properties": {
        "userId": {
          "name": "User ID",
          "type": "string",
          "description": "Unique user identifier"
        },
        "username": {
          "name": "Username",
          "type": "string",
          "description": "User's username"
        },
        "email": {
          "name": "Email",
          "type": "string",
          "description": "User's email address"
        },
        "role": {
          "name": "Role",
          "type": "string",
          "description": "User's system role",
          "enum": [
            "admin",
            "moderator",
            "user",
            "guest"
          ]
        },
        "status": {
          "name": "Status",
          "type": "string",
          "description": "Account status",
          "enum": [
            "active",
            "inactive",
            "locked",
            "pending"
          ]
        },
        "createdAt": {
          "name": "Created At",
          "type": "string",
          "description": "ISO 8601 timestamp of account creation"
        },
        "lastLoginAt": {
          "name": "Last Login At",
          "type": "string",
          "description": "ISO 8601 timestamp of last login"
        },
        "profile": {
          "name": "Profile",
          "type": "object",
          "description": "Extended profile information",
          "required": false,
          "modelRef": "UserProfile"
        }
      },
      "required": [
        "userId",
        "username",
        "email",
        "role",
        "status",
        "createdAt"
      ]
    },
    "UserUpdateRequest": {
      "name": "User Update Request",
      "type": "object",
      "description": "Request object for updating user information",
      "properties": {
        "email": {
          "name": "Email",
          "type": "string",
          "description": "New email address",
          "required": false,
          "pattern": "^[\\w\\.-]+@[\\w\\.-]+\\.[a-zA-Z]{2,}$"
        },
        "role": {
          "name": "Role",
          "type": "string",
          "description": "New user role",
          "required": false,
          "enum": [
            "admin",
            "moderator",
            "user",
            "guest"
          ]
        },
        "status": {
          "name": "Status",
          "type": "string",
          "description": "New account status",
          "required": false,
          "enum": [
            "active",
            "inactive",
            "locked"
          ]
        },
        "profile": {
          "name": "Profile Updates",
          "type": "object",
          "description": "Profile fields to update",
          "required": false,
          "modelRef": "UserProfile"
        }
      },
      "required": []
    }
  }
}